{"version":3,"sources":["components/Counter/Counter.tsx","App.tsx","index.tsx"],"names":["Counter","count","addOne","add100","increase","className","type","onClick","App","state","setState","previousState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAWaA,EAA2B,SAAC,GAAD,IACtCC,EADsC,EACtCA,MACAC,EAFsC,EAEtCA,OACAC,EAHsC,EAGtCA,OACAC,EAJsC,EAItCA,SAJsC,OAMtC,sBAAKC,UAAU,UAAf,UACE,8CAAeJ,KACf,wBACEI,UAAU,kBACVC,KAAK,SACLC,QAASL,EAHX,mBAOA,wBACEG,UAAU,kBACVC,KAAK,SACLC,QAASJ,EAHX,qBAOA,wBACEE,UAAU,kBACVC,KAAK,SACLC,QAASH,EAHX,0BCYWI,E,4MApCbC,MAAe,CACbR,MAAO,G,EAGTC,OAAS,kBACP,EAAKQ,UAAS,SAACC,GAAD,MACZ,CAAEV,MAAOU,EAAcV,MAAQ,O,EAGnCE,OAAS,kBACP,EAAKO,UAAS,SAACC,GAAD,MACZ,CAAEV,MAAOU,EAAcV,MAAQ,S,EAGnCG,SAAW,WACS,EAAKK,MAAfR,MAEI,IAAM,GAChB,EAAKE,SAGP,EAAKD,U,4CAGP,WACE,OACE,cAAC,EAAD,CACED,MAAOW,KAAKH,MAAMR,MAClBC,OAAQU,KAAKV,OACbC,OAAQS,KAAKT,OACbC,SAAUQ,KAAKR,e,GA/BLS,IAAMC,WCLxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.594a8299.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Counter.scss';\n\ninterface Props {\n  count: number,\n  addOne: () => void,\n  add100: () => void,\n  increase: () => void,\n}\n\nexport const Counter: React.FC<Props> = ({\n  count,\n  addOne,\n  add100,\n  increase,\n}) => (\n  <div className=\"counter\">\n    <h1>{`Count: ${count}`}</h1>\n    <button\n      className=\"counter__button\"\n      type=\"button\"\n      onClick={addOne}\n    >\n      Add 1\n    </button>\n    <button\n      className=\"counter__button\"\n      type=\"button\"\n      onClick={add100}\n    >\n      Add 100\n    </button>\n    <button\n      className=\"counter__button\"\n      type=\"button\"\n      onClick={increase}\n    >\n      Increase\n    </button>\n  </div>\n);\n","import React from 'react';\nimport './App.scss';\nimport { Counter } from './components/Counter';\n\ninterface State {\n  count: number,\n}\n\nclass App extends React.Component {\n  state: State = {\n    count: 0,\n  };\n\n  addOne = () => (\n    this.setState((previousState: State) => (\n      { count: previousState.count + 1 }))\n  );\n\n  add100 = () => (\n    this.setState((previousState: State) => (\n      { count: previousState.count + 100 }))\n  );\n\n  increase = () => {\n    const { count } = this.state;\n\n    if (count % 5 === 0) {\n      this.add100();\n    }\n\n    this.addOne();\n  };\n\n  render() {\n    return (\n      <Counter\n        count={this.state.count}\n        addOne={this.addOne}\n        add100={this.add100}\n        increase={this.increase}\n      />\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}